{
  "info": {
    "_postman_id": "c317-backend-collection",
    "name": "C317 Backend API",
    "description": "Cole√ß√£o para explorar a API do backend C317.\n\n**Recursos:**\n- Autentica√ß√£o (register, login)\n- Usu√°rios (CRUD)\n\n**Base URL:** http://localhost:3000\n\n**Notas:**\n- Use os DTOs para validar inputs\n- Todas as rotas de usu√°rio requerem autentica√ß√£o (exceto register/login)\n- Envie o token JWT como Bearer nas rotas protegidas",
    "schema": "https://schema.getpostman.com/json/collection/v2.1.0/collection.json"
  },
  "item": [
    {
      "name": "üîê Auth",
      "item": [
        {
          "name": "‚ú® Register",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user1@email.com\",\n  \"password\": \"123456\",\n  \"name\": \"John\",\n  \"age\": 22\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/register",
              "host": ["{{base_url}}"],
              "path": ["auth", "register"]
            }
          },
          "response": []
        },
        {
          "name": "üîë Login",
          "request": {
            "method": "POST",
            "header": [{ "key": "Content-Type", "value": "application/json" }],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"email\": \"user1@email.com\",\n  \"password\": \"123456\"\n}"
            },
            "url": {
              "raw": "{{base_url}}/auth/login",
              "host": ["{{base_url}}"],
              "path": ["auth", "login"]
            }
          },
          "response": []
        }
      ]
    },
    {
      "name": "üë§ Users",
      "item": [
        {
          "name": "üìã Get All Users",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "üîç Get User by ID",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "üîç Get User by Email",
          "request": {
            "method": "GET",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/users/email/{{user_email}}",
              "host": ["{{base_url}}"],
              "path": ["users", "email", "{{user_email}}"]
            }
          },
          "response": []
        },
        {
          "name": "‚ú® Create User",
          "request": {
            "method": "POST",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Nome do Usu√°rio\",\n  \"email\": \"novo@email.com\",\n  \"password\": \"123456\",\n  \"age\": 25,\n  \"speechDifficultyType\": \"leve\",\n  \"roles\": [\"user\"]\n}"
            },
            "url": {
              "raw": "{{base_url}}/users",
              "host": ["{{base_url}}"],
              "path": ["users"]
            }
          },
          "response": []
        },
        {
          "name": "üìù Update User",
          "request": {
            "method": "PUT",
            "header": [
              { "key": "Content-Type", "value": "application/json" },
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "body": {
              "mode": "raw",
              "raw": "{\n  \"name\": \"Nome Atualizado\",\n  \"age\": 30\n}"
            },
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          },
          "response": []
        },
        {
          "name": "üóëÔ∏è Delete User",
          "request": {
            "method": "DELETE",
            "header": [
              { "key": "Authorization", "value": "Bearer {{access_token}}" }
            ],
            "url": {
              "raw": "{{base_url}}/users/{{user_id}}",
              "host": ["{{base_url}}"],
              "path": ["users", "{{user_id}}"]
            }
          },
          "response": []
        }
      ]
    }
  ],
  "event": [
    {
      "listen": "prerequest",
      "script": {
        "type": "text/javascript",
        "exec": [
          "// Common headers for every request",
          "pm.request.headers.upsert({ key: 'Accept', value: 'application/json' });"
        ]
      }
    },
    {
      "listen": "test",
      "script": {
        "type": "text/javascript",
        "exec": [
          "pm.test('Status code is successful', function () {",
          "  pm.expect(pm.response.code).to.be.oneOf([200, 201, 204]);",
          "});",
          "",
          "try {",
          "  const json = pm.response.json();",
          "  if (json.access_token) pm.environment.set('access_token', json.access_token);",
          "  if (json._id) pm.environment.set('user_id', json._id);",
          "  if (json.email) pm.environment.set('user_email', json.email);",
          "} catch (e) { console.log('No JSON body or invalid JSON'); }"
        ]
      }
    }
  ],
  "variable": [
    { "key": "base_url", "value": "http://localhost:3000" },
    { "key": "access_token", "value": "" },
    { "key": "user_id", "value": "" },
    { "key": "user_email", "value": "" }
  ]
}